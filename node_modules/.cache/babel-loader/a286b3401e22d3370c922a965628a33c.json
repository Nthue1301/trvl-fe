{"ast":null,"code":"// import {Button, Form, Radio, Space, Switch, Table} from 'antd';\n// import { useState } from 'react';\n// import DownOutlined from '@ant-design/icons'\n// import Modal from \"antd/lib/modal/Modal\";\n// import { Link, useHistory, useParams } from \"react-router-dom\";\n// import taikhoanApi from './../../../api/taikhoanApi';\n// const columns = [\n//     {\n//         title: 'Brand',\n//         dataIndex: 'brand',\n//     },\n//     {\n//         title: 'Chuyến bay',\n//         dataIndex: 'flight',\n//     },\n//     {\n//         title: 'Giá',\n//         dataIndex: 'price',\n//         sorter: (a, b) => a.price - b.price,\n//     },\n//     {\n//         title: 'Thời gian',\n//         dataIndex: 'time',\n//     },\n//     {\n//         title: '',\n//         key: 'action',\n//         sorter: true,\n//         render: () => (\n//             <Space size=\"middle\">\n//                <Button\n//                       className=\"float-right position-absolute btn-dt\"\n//                       onClick={showModal}\n//                       variant=\"contained\"\n//                       color=\"secondary\"\n//                     >\n//                       Đặt vé\n//                     </Button>\n//             </Space>\n//         ),\n//     },\n// ];\n// const data = [\n//     {\n//         key: 1,\n//         brand: 'VietJet',\n//         flight: 'VJ116',\n//         price: '800000',\n//         time: '05:00 - 07:15'\n//     },\n//     {\n//         key: 2,\n//         brand: 'Bamboo',\n//         flight: 'VJ116',\n//         price: '600000',\n//         time: '05:00 - 07:15'\n//     },\n//     {\n//         key: 3,\n//         brand: 'VietNam airline',\n//         flight: 'VJ116',\n//         price: '500000',\n//         time: '05:00 - 07:15'\n//     },\n// ];\n// const TableTicket = () => {\n//     const [rowSelection, setRowSelection] = useState({});\n//     const [hasData, setHasData] = useState(true);\n//     const [tableLayout, setTableLayout] = useState(undefined);\n//     const [top, setTop] = useState('none');\n//     const [bottom, setBottom] = useState('bottomRight');\n//     const [ellipsis, setEllipsis] = useState(false);\n//     const [yScroll, setYScroll] = useState(false);\n//     const [xScroll, setXScroll] = useState(undefined);\n//     const { id } = useParams();\n//     const [state, setState] = useState({\n//       listdate: \"\",\n//       visible: false,\n//       visible2: false,\n//       visible3: false,\n//       name: \"\",\n//       email: \"\",\n//       sdt: \"\",\n//       diachi: \"\",\n//       nguoilon: 1,\n//       treem: 0,\n//       embe: 0,\n//       dieukhoan: false,\n//       valueDate: \"\",\n//       date: \"\",\n//       loadlaihoadon: 1,\n//     });\n//     const handleEllipsisChange = (enable) => {\n//         setEllipsis(enable);\n//     };\n//     // const handleRowSelectionChange = (enable) => {\n//     //     setRowSelection(enable ? {} : undefined);\n//     // };\n//     const handleYScrollChange = (enable) => {\n//         setYScroll(enable);\n//     };\n//     const handleXScrollChange = (e) => {\n//         setXScroll(e.target.value);\n//     };\n//     const handleDataChange = (newHasData) => {\n//         setHasData(newHasData);\n//     };\n//     const scroll = {};\n//     if (yScroll) {\n//         scroll.y = 240;\n//     }\n//     if (xScroll) {\n//         scroll.x = '100vw';\n//     }\n//     const tableColumns = columns.map((item) => ({ ...item, ellipsis }));\n//     if (xScroll === 'fixed') {\n//         tableColumns[0].fixed = true;\n//         tableColumns[tableColumns.length - 1].fixed = 'right';\n//     }\n//     const tableProps = {\n//         rowSelection,\n//         scroll,\n//         tableLayout,\n//     };\n//     const showModal = async () => {\n//         if (users) {\n//           var user = await taikhoanApi.getOne(+users.id).then((data) => {\n//             return data;\n//           });\n//           setState({\n//             ...state,\n//             visible3: false,\n//             visible: true,\n//             name: user.name,\n//             diachi: user.diachi,\n//             sdt: user.sdt,\n//             email: user.email,\n//           });\n//         } else {\n//           message.warning(\"Bạn cần đăng nhập trước!\");\n//         }\n//       };\n//     return (\n//         <>\n//             <Table\n//                 {...tableProps}\n//                 pagination={{\n//                     position: [top, bottom],\n//                 }}\n//                 columns={tableColumns}\n//                 dataSource={data}\n//                 scroll={scroll}\n//             />\n//         </>\n//     );\n// };\n// export default TableTicket;","map":{"version":3,"sources":["E:/Travel/trvl-fe/src/features/container/Tickets/TableTicket.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAMA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["// import {Button, Form, Radio, Space, Switch, Table} from 'antd';\r\n// import { useState } from 'react';\r\n// import DownOutlined from '@ant-design/icons'\r\n// import Modal from \"antd/lib/modal/Modal\";\r\n// import { Link, useHistory, useParams } from \"react-router-dom\";\r\n// import taikhoanApi from './../../../api/taikhoanApi';\r\n// const columns = [\r\n//     {\r\n//         title: 'Brand',\r\n//         dataIndex: 'brand',\r\n//     },\r\n//     {\r\n//         title: 'Chuyến bay',\r\n//         dataIndex: 'flight',\r\n//     },\r\n//     {\r\n//         title: 'Giá',\r\n//         dataIndex: 'price',\r\n//         sorter: (a, b) => a.price - b.price,\r\n//     },\r\n//     {\r\n//         title: 'Thời gian',\r\n//         dataIndex: 'time',\r\n\r\n\r\n//     },\r\n    \r\n//     {\r\n//         title: '',\r\n//         key: 'action',\r\n//         sorter: true,\r\n//         render: () => (\r\n//             <Space size=\"middle\">\r\n//                <Button\r\n//                       className=\"float-right position-absolute btn-dt\"\r\n//                       onClick={showModal}\r\n//                       variant=\"contained\"\r\n//                       color=\"secondary\"\r\n//                     >\r\n//                       Đặt vé\r\n//                     </Button>\r\n//             </Space>\r\n//         ),\r\n//     },\r\n// ];\r\n// const data = [\r\n//     {\r\n//         key: 1,\r\n//         brand: 'VietJet',\r\n//         flight: 'VJ116',\r\n//         price: '800000',\r\n//         time: '05:00 - 07:15'\r\n//     },\r\n//     {\r\n//         key: 2,\r\n//         brand: 'Bamboo',\r\n//         flight: 'VJ116',\r\n//         price: '600000',\r\n//         time: '05:00 - 07:15'\r\n//     },\r\n//     {\r\n//         key: 3,\r\n//         brand: 'VietNam airline',\r\n//         flight: 'VJ116',\r\n//         price: '500000',\r\n//         time: '05:00 - 07:15'\r\n//     },\r\n// ];\r\n\r\n\r\n\r\n\r\n\r\n// const TableTicket = () => {\r\n\r\n  \r\n\r\n//     const [rowSelection, setRowSelection] = useState({});\r\n//     const [hasData, setHasData] = useState(true);\r\n//     const [tableLayout, setTableLayout] = useState(undefined);\r\n//     const [top, setTop] = useState('none');\r\n//     const [bottom, setBottom] = useState('bottomRight');\r\n//     const [ellipsis, setEllipsis] = useState(false);\r\n//     const [yScroll, setYScroll] = useState(false);\r\n//     const [xScroll, setXScroll] = useState(undefined);\r\n\r\n\r\n//     const { id } = useParams();\r\n//     const [state, setState] = useState({\r\n//       listdate: \"\",\r\n//       visible: false,\r\n//       visible2: false,\r\n//       visible3: false,\r\n//       name: \"\",\r\n//       email: \"\",\r\n//       sdt: \"\",\r\n//       diachi: \"\",\r\n//       nguoilon: 1,\r\n//       treem: 0,\r\n//       embe: 0,\r\n//       dieukhoan: false,\r\n//       valueDate: \"\",\r\n//       date: \"\",\r\n//       loadlaihoadon: 1,\r\n//     });\r\n\r\n\r\n   \r\n\r\n//     const handleEllipsisChange = (enable) => {\r\n//         setEllipsis(enable);\r\n//     };\r\n\r\n\r\n\r\n\r\n\r\n//     // const handleRowSelectionChange = (enable) => {\r\n//     //     setRowSelection(enable ? {} : undefined);\r\n//     // };\r\n\r\n//     const handleYScrollChange = (enable) => {\r\n//         setYScroll(enable);\r\n//     };\r\n\r\n//     const handleXScrollChange = (e) => {\r\n//         setXScroll(e.target.value);\r\n//     };\r\n\r\n//     const handleDataChange = (newHasData) => {\r\n//         setHasData(newHasData);\r\n//     };\r\n\r\n//     const scroll = {};\r\n\r\n//     if (yScroll) {\r\n//         scroll.y = 240;\r\n//     }\r\n\r\n//     if (xScroll) {\r\n//         scroll.x = '100vw';\r\n//     }\r\n\r\n//     const tableColumns = columns.map((item) => ({ ...item, ellipsis }));\r\n\r\n//     if (xScroll === 'fixed') {\r\n//         tableColumns[0].fixed = true;\r\n//         tableColumns[tableColumns.length - 1].fixed = 'right';\r\n//     }\r\n\r\n//     const tableProps = {\r\n\r\n       \r\n//         rowSelection,\r\n//         scroll,\r\n//         tableLayout,\r\n//     };\r\n\r\n//     const showModal = async () => {\r\n//         if (users) {\r\n//           var user = await taikhoanApi.getOne(+users.id).then((data) => {\r\n//             return data;\r\n//           });\r\n//           setState({\r\n//             ...state,\r\n//             visible3: false,\r\n//             visible: true,\r\n//             name: user.name,\r\n//             diachi: user.diachi,\r\n//             sdt: user.sdt,\r\n//             email: user.email,\r\n//           });\r\n//         } else {\r\n//           message.warning(\"Bạn cần đăng nhập trước!\");\r\n//         }\r\n//       };\r\n//     return (\r\n//         <>\r\n//             <Table\r\n//                 {...tableProps}\r\n//                 pagination={{\r\n//                     position: [top, bottom],\r\n//                 }}\r\n//                 columns={tableColumns}\r\n//                 dataSource={data}\r\n//                 scroll={scroll}\r\n//             />\r\n//         </>\r\n//     );\r\n// };\r\n\r\n// export default TableTicket;"]},"metadata":{},"sourceType":"module"}